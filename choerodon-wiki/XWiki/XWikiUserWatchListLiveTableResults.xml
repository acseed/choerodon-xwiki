<?xml version='1.1' encoding='UTF-8'?>
<xwikidoc version="1.3" reference="XWiki.XWikiUserWatchListLiveTableResults" locale="">
  <web>XWiki</web>
  <name>XWikiUserWatchListLiveTableResults</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>XWiki.admin</creator>
  <creationDate>1534755147000</creationDate>
  <parent>XWiki.XWikiUserWatchListSheet</parent>
  <author>XWiki.admin</author>
  <contentAuthor>XWiki.admin</contentAuthor>
  <date>1534755147000</date>
  <contentUpdateDate>1534755147000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment>Imported from XAR</comment>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity wiki="false"}}
#template('hierarchy_macros.vm')
#if ($xcontext.action == 'get')
##
#macro (getWikiPrettyName $wikiName)
#set ($wikiPrettyName = $services.wiki.getById($wikiName).prettyName)
#if ("$!wikiPrettyName.trim()" != '')$wikiPrettyName#else$wikiName#end
#end
##
#macro (getSpacePrettyName $spaceReference)
#set ($spaceHomePage = $xwiki.getDocument($spaceReference))
#if ($spaceHomePage &amp;&amp; !$spaceHomePage.isNew())${spaceHomePage.plainTitle}#else${spaceReference.name}#end
#end
##
#macro (getPagePrettyName $pageReference)
#set ($pageDocument = $xwiki.getDocument($pageReference))
#if ($pageDocument &amp;&amp; !$pageDocument.isNew())${pageDocument.plainTitle}#else${pageReference.name}#end
#end
##
#macro(addElement $type $reference)
  #if ($type == 'wiki')
    #set ($id = $wiki)
  #elseif ($type == 'space')
    #set ($id = $services.model.serialize($reference, 'default'))
  #elseif ($type == 'document')
    #set ($id = $services.model.serialize($reference, 'default'))
  #end
  #set($location = "#hierarchy($reference, {'limit': 5, 'plain': false, 'local': false, 'displayTitle': false})")
  #set ($discard = $elements.add({
    'id'        : $id,
    'type'      : $type,
    'location'  : $location,
    'deleteUrl' : $doc.getURL('view', "xpage=watch&amp;do=remove${type}&amp;reference=${escapetool.url($id)}")
  }))
#end
##
## Build watched elements list
##
#set ($wikis = $services.watchlist.getWatchedElements("WIKI"))
#set ($spaces = $services.watchlist.getWatchedElements("SPACE"))
#set ($documents = $services.watchlist.getWatchedElements("DOCUMENT"))
#set ($elements = [])
## Wikis
#foreach ($wiki in $wikis)
  #if ("$!wiki" != '')
    #addElement('wiki', $services.model.createWikiReference($wiki))
  #end
#end
## Spaces
#foreach ($space in $spaces)
  #if ("$!space" != '')
    #set ($spaceRef = $services.model.resolveSpace($space))
    #addElement('space', $spaceRef)
  #end
#end
## Documents
#foreach ($document in $documents)
  #if ("$!document" != '')
    #set ($documentRef = $services.model.resolveDocument($document))
    #addElement('document', $documentRef)
  #end
#end
##
## JSON
##
$jsontool.serialize({
  'totalrows'   : $elements.size(),
  'reqNo'       : $request.reqNo,
  'returnedrows': $elements.size(),
  'offset'      : $request.offset,
  'rows'        : $elements
})
#end
{{/velocity}}</content>
</xwikidoc>