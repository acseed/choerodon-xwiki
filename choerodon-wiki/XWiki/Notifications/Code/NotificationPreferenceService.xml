<?xml version='1.1' encoding='UTF-8'?>
<xwikidoc version="1.3" reference="XWiki.Notifications.Code.NotificationPreferenceService" locale="">
  <web>XWiki.Notifications.Code</web>
  <name>NotificationPreferenceService</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>XWiki.admin</creator>
  <creationDate>1534755151000</creationDate>
  <parent>xwiki:XWiki.Notifications.Code.WebHome</parent>
  <author>XWiki.admin</author>
  <contentAuthor>XWiki.admin</contentAuthor>
  <date>1534755151000</date>
  <contentUpdateDate>1534755151000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment>Imported from XAR</comment>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
#if ("$!request.interval" != '')
  #set ($userDoc = $xwiki.getDocument($xcontext.userReference))
  #set ($prefObj = $userDoc.getObject('XWiki.Notifications.Code.NotificationEmailPreferenceClass', true))
  #set ($discard = $prefObj.set('interval', $request.interval))
  #set ($discard = $userDoc.save('Update Notification Email Interval'))
#elseif ("$!request.diffType" != '')
  #set ($targetDoc = 0)
  #if ("$!request.target" == 'wiki' &amp;&amp; $hasAdmin)
    #set ($targetDoc = $xwiki.getDocument($services.model.createDocumentReference('', ['XWiki', 'Notifications', 'Code'], 'NotificationAdministration')))
  #elseif ("$!request.target" == 'user')
    #set ($targetDoc = $xwiki.getDocument($xcontext.userReference))
  #end
  #if ($targetDoc == 0)
    #set ($discard = $response.sendError(401))
  #else
    #set ($prefObj = $targetDoc.getObject('XWiki.Notifications.Code.NotificationEmailPreferenceClass', true))
    #set ($discard = $prefObj.set('diffType', $request.diffType))
    #set ($discard = $targetDoc.save('Update Notification Email Diff Type'))
  #end
#elseif ("$!request.action" == 'savePreferences')
  #try()
    #if ("$!request.target" == 'wiki')
      $services.notification.preferences.saveNotificationPreferencesForCurrentWiki($request.json)
    #else
      $services.notification.preferences.saveNotificationPreferences($request.json)
    #end
  #end
  #if ("$!exception" != '')
    $response.sendError(500, "$!exceptiontool.getStackTrace($exception)")
  #end
#elseif ("$!request.action" == 'deleteFilterPreference')
  #try()
    #if ($services.csrf.isTokenValid($request.csrf))
      $services.notification.filters.deleteFilterPreference($request.filterPreferenceName)
    #else
      $response.sendError(401, 'Bad CSRF Token')
    #end
  #end
  #if ("$!exception" != '')
    $response.sendError(500, "$!exceptiontool.getStackTrace($exception)")
  #end
#elseif ("$!request.action" == 'setFilterPreferenceEnabled')
  #try()
    #if ($services.csrf.isTokenValid($request.csrf))
      $services.notification.filters.setFilterPreferenceEnabled($request.filterPreferenceName, $stringtool.equals("$!request.enabled", 'true'))
    #else
      $response.sendError(401, 'Bad CSRF Token')
    #end
  #end
  #if ("$!exception" != '')
    $response.sendError(500, "$!exceptiontool.getStackTrace($exception)")
  #end
#elseif ("$!request.action" == 'setAutoWatchMode')
  #try()
    #if ($services.csrf.isTokenValid($request.csrf))
      #set ($userDoc = $xwiki.getDocument($xcontext.userReference))
      #set ($obj = $userDoc.getObject('XWiki.Notifications.Code.AutomaticWatchModeClass', true))
      #set ($discard = $obj.set('automaticWatchMode', $request.mode))
      #set ($discard = $userDoc.save('Update the automaticWatchMode.'))
    #else
      $response.sendError(401, 'Bad CSRF Token')
    #end
  #end
  #if ("$!exception" != '')
    $response.sendError(500, "$!exceptiontool.getStackTrace($exception)")
  #end
#elseif ("$!request.action" == 'watchUser' || "$!request.action" == 'unwatchUser')
  #try()
    #if ($services.csrf.isTokenValid($request.csrf))
      #if ($request.action == 'watchUser')
        #set ($discard = $services.notification.watch.watchUser($request.userId))
      #else
        #set ($discard = $services.notification.watch.unwatchUser($request.userId))
      #end
    #else
      $response.sendError(401, 'Bad CSRF Token')
    #end
  #end
  #if ("$!exception" != '')
    $response.sendError(500, "$!exceptiontool.getStackTrace($exception)")
  #end
#end
{{/velocity}}
</content>
</xwikidoc>