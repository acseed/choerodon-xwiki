<?xml version='1.1' encoding='UTF-8'?>
<xwikidoc version="1.3" reference="Main.DatabaseSearch" locale="">
  <web>Main</web>
  <name>DatabaseSearch</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>XWiki.admin</creator>
  <creationDate>1534755062000</creationDate>
  <parent>Main.Search</parent>
  <author>XWiki.admin</author>
  <contentAuthor>XWiki.admin</contentAuthor>
  <date>1534755062000</date>
  <contentUpdateDate>1534755062000</contentUpdateDate>
  <version>1.1</version>
  <title>#if("$!{request.text}" == '')$services.localization.render('search.page.database.title.noquery')#else$services.localization.render('search.page.database.title.query', [$request.text])#end</title>
  <comment>Imported from XAR</comment>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity output="false"}}
#macro (databaseSearchForm)
  {{html clean="false"}}
  &lt;form action="$doc.getURL()" id="searchBar">
    &lt;div>
      &lt;label for="text" class="hidden">$services.localization.render('search.page.query.label')&lt;/label>
      &lt;input type="text" id="text" name="text" class="searchQuery" value="$!escapetool.xml($request.text)"
        title="$services.localization.render('search.page.bar.query.title')"
        placeholder="$services.localization.render('search.page.bar.query.tip')" />
      &lt;input type="text" name="space" class="suggestSpaces" value="$!escapetool.xml($request.space)"
        placeholder="$services.localization.render('search.page.bar.spaces.title')" />
      &lt;span class='buttonwrapper'>
        &lt;input type="submit" class="searchButton button"
          value="$services.localization.render('search.page.bar.submit')"
          title="$services.localization.render('search.page.bar.submit.title')" />
      &lt;/span>
    &lt;/div>
  &lt;/form>
  {{/html}}
#end

#macro (databaseAddResults $statement $params $map)
  #set ($query = $services.query.hql("$statement order by doc.date desc").addFilter('hidden').setLimit(50))
  #foreach ($entry in $params.entrySet())
    #set ($query = $query.bindValue($entry.key, $entry.value))
  #end
  #foreach ($localDocRef in $query.execute())
    #set ($documentReference = $services.model.resolveDocument($localDocRef))
    #if ($services.security.authorization.hasAccess('view', $documentReference))
      #set ($discard = $map.put($documentReference, $xwiki.getDocument($documentReference)))
    #end
  #end
#end

#macro (databaseSearch $text $list)
  #set ($results = {})
  #set ($matchLocation = '')
  #set ($params = {
    'text': "%$text.replaceAll('([%_!])', '!$1')%"
  })
  ## Search in the specified location, if $request.space is defined
  #set ($space = $request.space)
  #if ("$!space" != '')
    #set ($matchLocation = "(doc.space = :space or doc.space like :spacePrefix escape '!') and")
    #set ($params.space = $space)
    #set ($spaceReference = $services.model.resolveSpace($space))
    #set ($documentReference = $services.model.createDocumentReference('x', $spaceReference))
    #set ($params.spacePrefix = $stringtool.removeEnd($services.model.serialize($documentReference), 'x'))
    #set ($params.spacePrefix = "$params.spacePrefix.replaceAll('([%_!])', '!$1')%")
  #end
  ## Search in the page names
  #databaseAddResults(", XWikiSpace as space where $matchLocation space.reference = doc.space and ((doc.name &lt;&gt; 'WebHome' and upper(doc.name) like upper(:text) escape '!') or (doc.name = 'WebHome' and upper(space.name) like upper(:text) escape '!'))" $params $results)
  ## Search in page content
  #databaseAddResults("where $matchLocation upper(doc.content) like upper(:text) escape '!'" $params $results)
  ## Search in text fields (simple String properties)
  #databaseAddResults(", BaseObject as obj, StringProperty as prop where $matchLocation obj.name = doc.fullName and prop.id.id = obj.id and upper(prop.value) like upper(:text) escape '!'" $params $results)
  ## Search in big text fields (textarea properties)
  #databaseAddResults(", BaseObject as obj, LargeStringProperty as prop where $matchLocation obj.name = doc.fullName and prop.id.id = obj.id and upper(prop.value) like upper(:text) escape '!'" $params $results)
  #set ($discard = $list.addAll($sorttool.sort($results, ['date'])))
#end
{{/velocity}}

{{velocity}}
#set ($rssMode = $xcontext.action == 'get' || "$!request.xpage" == 'plain')
#if (!$rssMode)
  #set ($discard = $xwiki.ssfx.use('uicomponents/search/search.css', true))
  ## Disable the document extra data: comments, attachments, history...
  #set ($displayDocExtra = false)
  #databaseSearchForm
#end
#set ($text = "$!request.text")
#if ($text != '')
  #set ($list = [])
  #databaseSearch($text $list)
  #if ($rssMode)
    #set ($feed = $xwiki.feed.getDocumentFeed($list, {}))
    #set ($feedURI = $doc.getExternalURL("view"))
    #set ($discard = $feed.setLink($feedURI))
    #set ($discard = $feed.setUri($feedURI))
    #set ($discard = $feed.setAuthor('XWiki'))
    #set ($discard = $feed.setTitle($services.localization.render('search.rss', [$text])))
    #set ($discard = $feed.setDescription($services.localization.render('search.rss', [$text])))
    #set ($discard = $feed.setLanguage("$xcontext.locale"))
    #set ($discard = $feed.setCopyright($xwiki.getXWikiPreference('copyright')))
    #set ($discard = $response.setContentType('application/rss+xml'))
    {{{$xwiki.feed.getFeedOutput($feed, $xwiki.getXWikiPreference('feed_type', 'rss_2.0'))}}}
  #else
    {{include reference="XWiki.Results"/}}

    {{html clean="false"}}
      #set ($rssURL = $doc.getURL('get', $escapetool.url({
        'outputSyntax': 'plain',
        'space': $space,
        'text': $text
      })))
      &lt;a href="$rssURL" class="hasIcon iconRSS">
        $services.localization.render('search.rss', ["[$escapetool.xml($text)]"])
      &lt;/a>
    {{/html}}
  #end
#end
{{/velocity}}</content>
  <object>
    <name>Main.DatabaseSearch</name>
    <number>0</number>
    <className>XWiki.UIExtensionClass</className>
    <guid>01bd7e60-de8c-4fc6-b233-d0a86a3cdaf7</guid>
    <class>
      <name>XWiki.UIExtensionClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <content>
        <disabled>0</disabled>
        <editor>Text</editor>
        <name>content</name>
        <number>3</number>
        <prettyName>Extension Content</prettyName>
        <rows>10</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </content>
      <extensionPointId>
        <disabled>0</disabled>
        <name>extensionPointId</name>
        <number>1</number>
        <prettyName>Extension Point ID</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </extensionPointId>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>2</number>
        <prettyName>Extension ID</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parameters>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>parameters</name>
        <number>4</number>
        <prettyName>Extension Parameters</prettyName>
        <rows>10</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </parameters>
      <scope>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>scope</name>
        <number>5</number>
        <prettyName>Extension Scope</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>wiki=Current Wiki|user=Current User|global=Global</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </scope>
    </class>
    <property>
      <content></content>
    </property>
    <property>
      <extensionPointId>org.xwiki.platform.search</extensionPointId>
    </property>
    <property>
      <name>database</name>
    </property>
    <property>
      <parameters>label=$services.localization.render('search.extension.title.database')
admin=
search=Main.DatabaseSearch</parameters>
    </property>
    <property>
      <scope>wiki</scope>
    </property>
  </object>
</xwikidoc>